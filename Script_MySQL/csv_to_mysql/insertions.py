"""
Script de conversion du CSV aux requêtes d'insertion SQL.
"""

TABLES = {
    "departement": {
        "colonnes": ["nom_departement", "annee_etude"],
        "source": {"chemin": "data/groupes.txt", "index": [1, 2]},
    },
    "creneau": {
        "colonnes": ["id_creneau", "intitule" ,"heure_debut", "heure_fin"],
        "source": {"chemin": "resultat/les_creneaux.csv", "index": [3, 2, 0, 1]},
    },
    "professeur": {
        "colonnes": ["nom_professeur", "prenom_professeur"],
        "source": {"chemin": "data/enseignants.txt", "index": [0, 1]}, # SEPARATEUR : simple espace
    },
    "batiment": {
        "colonnes": ["nom_batiment"],
        "source": {"chemin": "data/salles.txt", "index": [1]}
    },
    "groupe": {
        "colonnes": ["nom_groupe","nom_departement", "annee_etude"], #par rapport au schéma relationnel, nom_departement et annee_etude
        "source": {"chemin": "data/groupes.txt", "index": [0, 1, 2]}  #sont inversé car s'est inversé dans le fichier txt
    },
    "salle": {
        "colonnes": ["nom_salle", "nom_batiment", "est_informatique"], #pareille ici
        "source": {"chemin": "data/salles.txt", "index": [0, 1, 2]}
    },
    "accueil": {
        "colonnes": ["id_creneau", "nom_salle"],
        "source": {"chemin": "resultat/les_creneaux.csv", "index": [3, 4]}
    },
    "participer": {
        "colonnes": ["nom_groupe", "id_creneau"],
        "source": {"chemin": "resultat/les_creneaux.csv", "index": [5, 3]}
    },
    "enseigner": {
        "colonnes": ["id_professeur", "id_creneau"],
        "source": {"chemin": "resultat/les_creneaux.csv", "index": [6, 3]}
    }

}

import sys

for table in TABLES:
    fichier_source = TABLES[table]["source"]["chemin"]
    fichier_destination = f"sql_script_Oracle/insertion/insertion_{table}.sql"
    
    requetes_insertions = []
    
    with open(TABLES[table]["source"]["chemin"], 'r', encoding="UTF-8") as fichier:
        if table == "professeur":
            lignes_fichier = fichier.read().split('\n')
            
            for index_ligne in range(len(lignes_fichier)):
                lignes_fichier[index_ligne] = lignes_fichier[index_ligne].split(' ')
        else:
            lignes_fichier = fichier.read().split('\n')[1:]
            
            if TABLES[table]["source"]["chemin"].split('.')[-1] == "csv":
                for index_ligne in range(len(lignes_fichier)):
                    lignes_fichier[index_ligne] = lignes_fichier[index_ligne].split(';')
            else:
                for index_ligne in range(len(lignes_fichier)):
                    lignes_fichier[index_ligne] = lignes_fichier[index_ligne].split('\t')
        
        colonnes = ', '.join(TABLES[table]["colonnes"])
        
        for ligne in lignes_fichier:
            valeurs = []
            
            for index_colonne in range(len(ligne)):
                if index_colonne in TABLES[table]["source"]["index"]:
                    valeurs.append(ligne[index_colonne])
            
            valeurs = ', '.join(valeurs)
            
            requetes_insertions.append(
                f"INSERT INTO {table} ({colonnes}) VALUES ({valeurs});"
            )
            
            print(table)
            print(requetes_insertions)
            sys.exit()