"""
Script de conversion du CSV aux requêtes d'insertion SQL.
"""

import sys

TABLES = {
    "departement": {
        "colonnes": [{"nom": "nom_departement", "type": "str"}],
        "source": {"chemin": "data/groupes.txt", "index": [1]},
    },
    "creneau": {
        "colonnes": [{"nom": "id_creneau", "type": "int"}, 
                     {"nom": "intitule", "type": "str"}, 
                     {"nom": "heure_debut", "type": "str"}, 
                     {"nom": "heure_fin", "type": "str"}],
        "source": {"chemin": "resultat/les_creneaux.csv", "index": [3, 2, 0, 1]},
    },
    "professeur": {
        "colonnes": [{"nom": "id_professeur", "type": "int"}, 
                     {"nom": "nom_professeur", "type": "str"}, 
                     {"nom": "prenom_professeur", "type": "str"}],
        "source": {"chemin": "data/enseignants.txt", "index": [2, 0, 1]}, # SEPARATEUR : simple espace
    },
    "batiment": {
        "colonnes": [{"nom": "nom_batiment", "type": "str"}],
        "source": {"chemin": "data/salles.txt", "index": [1]}
    },
    "groupe": {
        "colonnes": [{"nom": "nom_groupe", "type": "str"}, 
                     {"nom": "nom_departement", "type": "str"}, 
                     {"nom": "annee_etude", "type": "int"}], #par rapport au schéma relationnel, nom_departement et annee_etude
        "source": {"chemin": "data/groupes.txt", "index": [0, 1, 2]}  #sont inversé car s'est inversé dans le fichier txt
    },
    "salle": {
        "colonnes": [{"nom": "nom_salle", "type": "str"}, 
                     {"nom": "nom_batiment", "type": "str"}, 
                     {"nom": "est_informatique", "type": "int"}], #pareille ici
        "source": {"chemin": "data/salles.txt", "index": [0, 1, 2]}
    },
    "accueil": {
        "colonnes": [{"nom": "id_creneau", "type": "int"}, 
                     {"nom": "nom_salle", "type": "str"}],
        "source": {"chemin": "resultat/les_creneaux.csv", "index": [3, 4]}
    },
    "participer": {
        "colonnes": [{"nom": "nom_groupe", "type": "str"}, 
                     {"nom": "id_creneau", "type": "int"}],
        "source": {"chemin": "resultat/les_creneaux.csv", "index": [5, 3]}
    },
    "enseigner": {
        "colonnes": [{"nom": "id_professeur", "type": "int"}, 
                     {"nom": "id_creneau", "type": "int"}],
        "source": {"chemin": "resultat/les_creneaux.csv", "index": [6, 3]}
    }

}

def recuperer_id_professeur_par_nom(nom: str) -> int:
    with open("data/enseignants.txt", 'r', encoding="UTF-8") as fichier:
        for i, ligne in enumerate(fichier.readlines()):
            ligne = ligne.strip()
            
            if ligne == nom.upper():
                return i
    
    return 0

for table in TABLES:
    fichier_source = TABLES[table]["source"]["chemin"]
    fichier_destination = f"sql_script_Oracle/insertion/insertion_{table}.sql"
    
    requetes_insertions = []
    
    with open(TABLES[table]["source"]["chemin"], 'r', encoding="UTF-8") as fichier:
        if table == "creneau": continue
        
        if table == "professeur":
            lignes_fichier = fichier.read().split('\n')
            
            # ANCIEN EMPLACEMENT RECUP IDPROF
                
        else:
            lignes_fichier = fichier.read().split('\n')[1:]
            
            if TABLES[table]["source"]["chemin"].split('.')[-1] == "csv":
                for index_ligne in range(len(lignes_fichier)):
                    lignes_fichier[index_ligne] = lignes_fichier[index_ligne].split(';')
            else:
                for index_ligne in range(len(lignes_fichier)):
                    lignes_fichier[index_ligne] = lignes_fichier[index_ligne].split('\t')
        
        colonnes = []
        
        for colonne in TABLES[table]["colonnes"]:
            colonnes.append(colonne["nom"])
        
        colonnes = ', '.join(colonnes)
        
        for ligne in lignes_fichier:
            valeurs = []
            
            for index_colonne in range(len(ligne)):
                if index_colonne in TABLES[table]["source"]["index"]:
                    if TABLES[table]["colonnes"][index_colonne - 1]["type"] == "str":
                        try: ligne[index_colonne] = f"'{ligne[index_colonne]}'"
                        except: print(table)  # FIXME: gérer l'erreur str (professeur)
                    
                    valeurs.append(ligne[index_colonne])
                    
            if table == "professeur":
                for index_ligne in range(len(lignes_fichier)):
                    lignes_fichier[index_ligne] = lignes_fichier[index_ligne].split(' ')
                    
                    lignes_fichier[index_ligne].insert(0, str(
                        recuperer_id_professeur_par_nom(
                            ' '.join(lignes_fichier[index_ligne])
                        )
                    ))
            
            valeurs = ', '.join(valeurs)
            
            types_colonnes = []
            
            for colonne in TABLES[table]["colonnes"]:
                types_colonnes.append(colonne["type"])
            
            requetes_insertions.append(
                f"INSERT INTO {table} ({colonnes}) VALUES ({valeurs});"
            )
            
            print(table)
            print(requetes_insertions)
            # sys.exit()
            # break ca existe hein
        