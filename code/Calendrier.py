import Creneau


class Calendrier:
    def __init__(self, url : str) -> None:
        self.url_fichier = url
        self.liste_evenements = []
        self.taille_bloc = 12

    def get_data(self):
        self.liste_evenements = parse_data(self.url_fichier)
    
    def get_events(self):
        return self.liste_evenements


def parse_data(url : str) -> list:
    lecture = False #Pas utilisÃ©
    liste_retour = []
    data_bloc = {}
    with open(url) as fichier:
        liste_lignes = fichier.readlines()[0:100]
        
        for ligne in liste_lignes:
            match ligne.startswith():
                case "BEGIN:VEVENT"
            if ligne.startswith():
                data_bloc = {}

            if ligne.startswith("DTSTART"):
                data_bloc["debut"] = ligne[8:-1]
            
            elif ligne.startswith("DTEND"):
                data_bloc["fin"] = ligne[5:-1]

            elif ligne.startswith("LOCATION"):
                if ligne[9:-1 ] != "":
                    data_bloc["salle"] = ligne[9:-1 ]
                else:
                    data_bloc["salle"] = None
            
            elif ligne.startswith("SUMMARY"):
                data_bloc["intitule"] = ligne[8:-1]

            elif ligne.startswith("DESCRIPTION"):
                
                prof, groupe = get_prof_groupe(ligne=ligne)

                data_bloc["professeur"] = prof
                data_bloc["groupe"] = groupe
                # TODO ajouter le prof et le groupe


            elif ligne.startswith("END:VEVENT"):
                # print(data_bloc)
                bloc = Creneau.Creneau()
                bloc.ajout_donnees(dico=data_bloc)
                liste_retour.append(bloc)
        
        return liste_retour



def get_prof_groupe(ligne : str) -> tuple:
    print(ligne)

    return "", ""