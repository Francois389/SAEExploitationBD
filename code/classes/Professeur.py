from classes.donnees import LISTE_DES_NOMS_PROFS

class Professeur:
    """
    La classe Professeur permet l'utilisation de la table professeurs de la 
    base de données.
    """
    def __init__(self, id: int, nom: str, prenom: str) -> None:
        """
        Constructeur de la classe.
        Définition des attributs de classe utilisés dans les différentes 
        méthodes.

        Arguments :
            id (int)  -> Identifiant unique du professeur\n
            nom (str) -> Nom de famille du professeur
        """
        self.indentifiant: int = id
        self.nom: str = nom
        self.prenom: str = prenom
    
    def get_ident (self) -> str: return self.indentifiant

    def get_nom (self) -> str: return self.nom

    def get_prenom (self) -> str: return self.prenom

    def find_ident(data: str) -> int:
        for i, prof in enumerate(LISTE_DES_NOMS_PROFS):
            if prof == data:
                return i


    def get_colonnes_sql(self) -> tuple[str]:
        return ("(id_professeur, nom_professeur, prenom_professeur)")

    def get_valeurs_sql(self) -> tuple[str]:
        return (f"('{self.indentifiant}', '{self.nom}', '{self.prenom}')")

    def __eq__(self, arg) -> bool:
        return self.indentifiant == arg.get_ident()

    def __gt__(self, arg) -> bool:
        return self.indentifiant > arg.get_ident()
    
    def __lt__(self, arg) -> bool:
        return self.indentifiant < arg.get_ident()

    def __str__(self) -> str:
        return f"Professeur: \n\t{self.nom} {self.prenom} \n\tid: {self.indentifiant}"