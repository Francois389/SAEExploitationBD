from classes.Departement import Departement

class Groupe:
    def __init__(self, nom: str) -> None:
        self.nom_groupe:  str = nom.replace(" ", "")
        self.departement: Departement = None
        self.annee_etude: int = None

        # self.get_donnees_groupe()

    def get_donnees_groupe(self):
        with open("../data/groupes.txt") as fichier:
            for ligne in fichier.readlines():
                if self.nom_groupe in ligne:

                    ligne_split = ligne.replace("\n", "").split("\t")
                    self.departement = Departement(ligne_split[1], ligne_split[2])
                    self.annee_etude = self.departement.get_annee()

                

    def get_nom(self) -> str: return self.nom_groupe

    def get_annee(self) -> int: return self.annee_etude

    def get_departement(self) -> Departement: return "Null" if self.departement == None else self.departement

    def get_departement_id(self) -> str:
        return "Null" if self.departement == None else f"{self.departement.get_nom()}{self.departement.get_annee()}"

    def get_colonnes_sql(self) -> tuple[str]:
        return ("(nom_groupe, annee_etude, nom_departement)")

    def get_valeurs_sql(self) -> tuple[str]:
        return (f"('{self.nom_groupe}', '{self.annee_etude}', '{self.get_departement_id()}')")
    
    


    def __eq__(self, arg) -> bool:
        return self.nom_groupe == arg.get_nom()

    def __gt__(self, arg) -> bool:
        return self.nom_groupe > arg.get_nom()
    
    def __lt__(self, arg) -> bool:
        return self.nom_groupe < arg.get_nom()

    def __str__(self) -> str:
        return f"Groupe: \n\t{self.nom_groupe} \n\tDepartement: \n\t{self.get_departement()}"
    