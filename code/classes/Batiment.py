class Batiment:
    """
    Classe d'objet Bâtiment.
    Le bâtiment est lié aux salles, les abrite.
    """
    def __init__(self, nom_batiment: str) -> None:
        """
        Constructeur de la classe.
        Initialisation des attributs de classe avec les valeurs
        passées en argument.

        Paramètres:
            nom_batiment (str): Nom du bâtiment
        """
        self.nom_batiment = nom_batiment

    def get_nom_bat(self) -> str: 
        """
        Getter permettant la récupération de l'attribut nom_bat,
        soit le nom du bâtiment stocké dans l'instance.

        Retourne:
            str: Nom du bâtiment de l'instance de la classe
        """
        return self.nom_batiment


    def get_colonnes_sql(self) -> tuple[str]:
        return ("(nom_batiment)")

    def get_valeurs_sql(self) -> tuple[str]:
        return (f"('{self.get_nom_bat()}')")

    def __eq__(self, arg) -> bool:
        """
        Methode pour vérifier l'égalité entre deux Batiment.
        Il sont égale s'il posséde le même nom.

        Paramètres:
            arg (Batiment): Le deuxiéme élement à comparer

        Retoure:
            bool: True si les deux batiment ont le même nom False sinon
        """
        if type(arg) == type(None):
            return False
        
        return self.nom_batiment == arg.get_nom_bat()

    def __gt__(self, arg) -> bool:
        return self.nom_batiment > arg.get_nom_bat()
    
    def __lt__(self, arg) -> bool:
        return self.nom_batiment < arg.get_nom_bat()

    def __str__(self) -> str:
        """
        Permet d'afficher l'objet Batiment
        """
        return self.nom_batiment