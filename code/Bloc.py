from Creneau import Creneau
from Salle import Salle
from Professeur import Professeur
from Groupe import Groupe


class Bloc:
    def __init__(self, dico: dict) -> None:
        self.creneau: Creneau = self.get_creneau(dico["creneau"])
        self.professeurs: list[Professeur] = self.get_prof(dico["professeur"])
        self.groupes: list[Groupe] = self.get_groupes(dico["groupe"])
        self.salle: Salle = self.get_salle(dico["salle"])

        self.dictionnaire_donnees = dico

    
    def get_creneau(self, data: dict) -> Creneau:
        id = data["id"]
        intitule = data["intitule"]
        debut = data["debut"]
        fin = data["fin"]

        return Creneau(id=id, intitule=intitule, debut=debut, fin=fin)

    def get_prof(self, data) -> list[Professeur]:
        if (type(data) == str):
            return [Professeur(id=0, nom="Null", prenom="Null")]
        else:
            liste_retour = []
            for prof in data:
                temp = prof.split(" ")
                prenom = temp[0]
                nom = ' '.join(temp[1:])

                liste_retour.append(Professeur(id=0, nom=nom, prenom=prenom))

            return liste_retour
        
    def get_groupes(self, data) -> list[Groupe]:
        if data == "DU":
            annee = "3+"
        elif "1" == data[2] or "2" == data[2]:
                annee = data[2]
        else:
            annee = "3+"
        
        grp = Groupe(nom=data, annee=annee)

        return grp
        

    def get_salle(self, data) -> Salle:
        salle = Salle(data, self.creneau.get_identifiant())
        return salle

    def get_data_csv(self) -> list:

        resultat = [
            self.creneau.get_heure_debut(),
            self.creneau.get_heure_fin(),
            self.creneau.get_intitule(),
            self.salle.get_nom(),
            self.lisible_groupe(self.groupes),
            self.lisible_prof(self.professeurs).removesuffix(", ")
        ]
        return resultat

    def lisible_prof(self, data: list) -> str:
        res = ""

        for prof in data:
            res = res + prof.get_prenom() + " " + prof.get_nom() + ", "  
        
        return res

    def lisible_groupe(self, data: list) -> str:
        if type(data) == str:
            return data
        else:
            return data.get_nom()

    def __str__(self) -> str:

        res = str(self.creneau) + "\n"

        for prof in self.professeurs:
            res = res + str(prof) + "\n"

        res = res + str(self.groupes) + "\n"

        res = res + str(self.salle) + "\n\n"
        
        return res

