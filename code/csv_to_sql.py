import os
import splitFile

PATH_FILE = "{target}/sql/{table}.sql"

INSERTION = "INSERT INTO {table} ({colonnes}) VALUES ({valeurs});"

# nous avons décidé de garder l'uid du fichier ics en tant
# que cle primaire suite à nos choix de conceptions de la bd
# ainsi, nous avons déterminér la taille maximum de ce dernier
# pour harmoniser les ID
TAILLE_MAX_ID_CRENEAUX = 59

def ajouter_dans_csv(url_file: str, objet, newline: bool = True, delimiter: str = None) -> None:
    """
    Ajouter une cellule dans le fichier CSV donné.

    Paramètres :
        url_file    -> Chemin vers le fichier à modifier
        objet       -> Contenu à insérer
        newline     -> Ajout d'une nouvelle ligne ou non
        delimiter   -> Caractère de délimitation des valeurs
    """

    with open(url_file, 'a', encoding='utf-8') as csv:
        if newline:
            csv.writelines(str(objet) + "\n")
            
        else:
            csv.writelines(str(objet))
            csv.writelines(str(delimiter))


def get_departements() -> list:
    liste_departements = ["Null"]
    with open("data/groupes.txt", encoding="utf-8") as fichier_groupes:
        for ligne in fichier_groupes.readlines()[1:]:
            if not ligne.split("\t")[1] in liste_departements:
                liste_departements.append(ligne.split("\t")[1])

    return liste_departements

def get_batiments() -> list:
    liste_batiments = ["Null"]
    with open("data/salles.txt", encoding="utf-8") as fichier_salles:
        for ligne in fichier_salles.readlines()[1:]:

            if not ligne.split("\t")[1] in liste_batiments:
                liste_batiments.append(ligne.split("\t")[1])

    return liste_batiments

def get_salles() -> list:
    liste_salles = [("Null", "non", "Null")]
    nom_salle = ""
    batiment = ""
    est_informatique = ""

    with open("data/salles.txt", encoding="utf-8") as fichier_salles:
        for ligne in fichier_salles.readlines()[1:]:
            ligne_split = ligne.split("\t")
            nom_salle = ligne_split[0]
            batiment = ligne_split[1]
            est_informatique = "oui" if "oui" in ligne else "non"

            if not nom_salle in liste_salles:
                liste_salles.append((nom_salle, est_informatique, batiment))

    return liste_salles

def get_professeurs() -> list:
    liste_profs = [(0, "Null", "Null")]
    with open("data/enseignants.txt", encoding="utf-8") as fichier_prof:
        for id, ligne in enumerate(fichier_prof.readlines()[1:]):
            
            if not id+1 in liste_profs:
                liste_profs.append((id+1, ligne.split(" ")[1].removesuffix("\n"), ligne.split(" ")[0]))

    return liste_profs

def get_groupes() -> list:
    liste_groupes = [("Null", "Null", "Null")]
    nom_groupe = ""
    annee_etude = ""
    nom_departement = ""

    with open("data/groupes.txt", encoding="utf-8") as fichier_groupes:
        for ligne in fichier_groupes.readlines()[1:]:
            ligne_split = ligne.split("\t")
            nom_groupe = ligne_split[0]
            annee_etude = ligne_split[1]
            nom_departement = ligne_split[2].removesuffix("\n")

            if not nom_groupe in liste_groupes:
                liste_groupes.append((nom_groupe, annee_etude, nom_departement))

    return liste_groupes


def find_id_prof(prof: str) -> int:
    with open("data/enseignants.txt", encoding="utf-8") as fichier_prof:
        for id, ligne in enumerate(fichier_prof.readlines()[1:]):
            
            if prof in ligne:
                return id+1

    return 0

def supprimer_fichier(table: str) -> None:

    for file in os.listdir(f"{target}/sql"):
        if table in file:
            os.remove(f"{target}/sql/{file}")



def insert_from_dict(dico: dict) -> None:
    virgule = ", "

    for table, donnees in dico.items():
        supprimer_fichier(table)
        
        for dico_donnees in donnees:

            ajouter_dans_csv(
                url_file=PATH_FILE.format(target=target, table=table),
                objet=INSERTION.format(
                        table=table,
                        colonnes=virgule.join(list(dico_donnees.keys())),
                        valeurs=f"{str(list(dico_donnees.values())).replace('[', '').replace(']', '')}"
                    ),
                newline=True,
                delimiter=None
            )
            
        # on split le fichier en plusieurs si il est trop gros
        splitFile.split(
            path=f"{target}/sql/",
            nom_fichier=f"{table}",
            extension=".sql",
        )
        
        print(f"Les insertions de la table '{table}' ont été mises à jour avec succès")


def demarer_insertions() -> None:

    dico_insertions = {
        "departement" : [],
        "batiment"    : [],
        "salle"       : [],
        "professeur"  : [],
        "groupe"      : [],
        "creneau"     : [],
        "accueil"     : [],
        "participer"  : [],
        "enseigner"   : [],
    }

    for dep in get_departements():
        dico_insertions["departement"].append(
            {
                "nom_departement" : dep
            }
        )

    for bat in get_batiments():
        dico_insertions["batiment"].append(
            {
                "nom_batiment" : bat
            }
        )

    for salle in get_salles():
        dico_insertions["salle"].append(
            {
                "nom_salle"        : salle[0],
                "est_informatique" : salle[1],
                "nom_batiment"     : salle[2],
            }
        )

    for grp in get_groupes():
        dico_insertions["groupe"].append(
            {
                "nom_groupe"      : grp[0],
                "annee_etude"     : grp[1],
                "nom_departement" : grp[2],
            }
        )

    for prof in get_professeurs():
        dico_insertions["professeur"].append(
            {
                "id_professeur"     : prof[0],
                "nom_professeur"    : prof[1],
                "prenom_professeur" : prof[2],
            }
        )

    ligne_split = ""
    id_creneau = ""
    with open("resultat/les_creneaux.csv", encoding="utf-8") as fichier_csv:
        for ligne in fichier_csv.readlines()[1:]:
            ligne_split = ligne.split(";")

            # insertion des creneaux
            liste_donnes_creneaux = ligne_split[0:4]

            id_creneau = ligne_split[3]
            
            while len(id_creneau) < TAILLE_MAX_ID_CRENEAUX:
                id_creneau = "0" + id_creneau

            if not liste_donnes_creneaux[3] in dico_insertions["creneau"]:
                dico_insertions["creneau"].append(
                    {
                        "id_creneau"  : liste_donnes_creneaux[3],
                        "intitule"    : liste_donnes_creneaux[2],
                        "heure_debut" : liste_donnes_creneaux[0], 
                        "heure_fin"   : liste_donnes_creneaux[1], 
                    }
                )

            for salle in ligne_split[4].split(", "):
                dico_insertions["accueil"].append(
                    {
                        "nom_salle"  : salle,
                        "id_creneau" : ligne_split[3],
                    }
                )

            for groupe in ligne_split[5].split(", "):
                dico_insertions["participer"].append(
                    {
                        "nom_groupe" : groupe,
                        "id_creneau" : ligne_split[3],
                    }
                )

            for prof in ligne_split[6].split(", "):
                dico_insertions["enseigner"].append(
                    {
                        "id_professeur" : find_id_prof(prof),
                        "id_creneau"    : ligne_split[3],
                    }
                )

    insert_from_dict(dico=dico_insertions)



if __name__ == "__main__":
    target = "debug"
    demarer_insertions()