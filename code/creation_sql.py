from classes.Calendrier import Calendrier
from classes.Bloc import Bloc 
from classes.Creneau import Creneau
from classes.Groupe import Groupe
from classes.Professeur import Professeur 
from classes.Salle import Salle 
from classes.Departement import Departement
from classes.Batiment import Batiment 
from classes.Accueil import Accueil
from classes.Participe import Participe
from classes.Enseigner import Enseigner

from classes.donnees import LISTE_DES_NOMS_GROUPES, LISTE_DES_NOMS_PROFS

import os


calendrier: Calendrier = Calendrier("data/ADECal.ics")

calendrier.get_data()

liste = calendrier.get_events()


data_a_inserer = {
    "departements" : [],
    "creneaux"     : [],
    "professeurs"  : [],
    "batiments"    : [],
    "groupes"      : [],
    "salles"       : [],
    "acceuils"     : [],
    "participer"   : [],
    "enseigner"    : [],
}


for event in liste:
    
    creneau  : Creneau    = event.get_creneau()
    profs    : Professeur = event.get_professeurs()
    groupes  : Groupe     = event.get_groupes()
    salles   : Salle      = event.get_salles()



    if not creneau in data_a_inserer["creneaux"]:
        data_a_inserer["creneaux"].append(creneau)
    
    for prof in profs:
        if not prof in data_a_inserer["professeurs"]:
            data_a_inserer["professeurs"].append(prof)

        data_a_inserer["enseigner"].append(
            Enseigner(professeur=prof, creneau=creneau)
        )
    
    for salle in salles:

        if salle.get_nom() != "Null":
            if not salle in data_a_inserer["salles"]:
                data_a_inserer["salles"].append(salle)
            

            if not salle.get_batiment() in data_a_inserer["batiments"]:
                data_a_inserer["batiments"].append(salle.get_batiment())
    
        data_a_inserer["acceuils"].append(
            Accueil(salle=salle, creneau=creneau)
        )



    for grp in groupes:
        if not grp in data_a_inserer["groupes"]:
            data_a_inserer["groupes"].append(grp)

        if grp.departement != None:
            if not grp.departement in data_a_inserer["departements"]:
                data_a_inserer["departements"].append(grp.get_departement())

        data_a_inserer["participer"].append(
            Participe(groupe=grp, creneau=creneau)
        )




def ajouter_dans_csv(url_file: str, objet, newline: bool = True, delimiter: str = None) -> None:
    """
    Ajouter une cellule dans le fichier CSV donné.

    Paramètres :
        url_file    -> Chemin vers le fichier à modifier
        objet       -> Contenu à insérer
        newline     -> Ajout d'une nouvelle ligne ou non
        delimiter   -> Caractère de délimitation des valeurs
    """

    with open(url_file, 'a', encoding='utf-8') as csv:
        if newline:
            csv.writelines(str(objet) + "\n")
            
        else:
            csv.writelines(str(objet))
            csv.writelines(str(delimiter))


INSERT = "INSERT INTO {table} {colonnes} VALUES {valeurs};"


for key, values in data_a_inserer.items():
    table = key

    if os.path.exists(f"debug/sql/{table}.sql"):
        os.remove(f"debug/sql/{table}.sql")
        print(f"Les insertions de la table : {table} ont bien été suppriméss et vont etre remplacées")

    for elt in sorted(values):    

        ajouter_dans_csv(
            url_file=f"debug/sql/{table}.sql",
            objet=INSERT.format(
                table=table,
                colonnes=elt.get_colonnes_sql(),
                valeurs=elt.get_valeurs_sql(),
            ),
            newline=True,
            delimiter=None,
        )

    print(f"Les insertions de la table : {table} ont été crées avec succés")
