import re
import os


def creation_insertion_sql(ligne: str, text_format: list,
                           table_attribut: dict, nom_table: str, delimiter: str = ";") -> str:
    """
    Ecrit la requete SQL pour inserer dans une Table SQl
    avec les attributs enregistrer dans le dictionnaire table_attribut.

    arguments :
        ligne -> str : la ligne de code à convertir respectant le format text_format
        text_format → list : le format de la ligne du fichier texte
        table_attribut → dict :  Le dictionnaire qui en valeur le nom de l'attribut
                                  et en clé l'équivalent dans le fichier texte
        nom_table → str : le nom de la table SQL
        delimiter → str : le delimiteur de la ligne de code. Par defaut c'est ";"

    retours :
        ligne_retour → str : la ligne de code sql a inserer dans le fichier

    """
    ligne_retour = f"INSERT INTO {nom_table} ("
    for propriete_table in text_format:
        ligne_retour += table_attribut[propriete_table] + ", "
    ligne_retour = ligne_retour[:-2] + ") VALUES ("

    if nom_table == "SALLE" and ligne.split(delimiter)[2] == '':
        # Si la salle n'est pas informatique on met la valeur à non, car il n'y a pas de valeur dans le fichier texte
        ligne += "non"

    for mot in ligne.split(delimiter):
        try:
            ligne_retour += f"{int(mot)}"
        except:
            ligne_retour += f"'{mot}'"
            print("An exception occurred")
        ligne_retour += ', '
    return ligne_retour[:-2] + ");"


def lecture_ecriture_fichier_txt(url_source: str, url_destination):
    """
    Lit le fichier texte et écrit le code SQL dans le fichier destination

    
    """
    table_attribut = {"groupe": "nom_groupe", "departement": "nom_departement", "annee": "annee_etude"
                      , "salle": "nom_salle", "batiment": "nom_batiment", "salle informatique": "est_informatique"}
    if os.path.exists(url_destination):
        os.remove(url_destination)

    with open(url_source, "r", encoding="utf8") as source, open(url_destination, "w", encoding="utf8") as destination:
        lignes_source = source.readlines()
        text_format = lignes_source[0].removesuffix('\n').split('\t')

        regex: str = "../data/(.*).txt"  # Récupére le nom de la table à partir du nom du fichier
        nom_table = re.search(regex, url_source).group(1).upper().removesuffix('S')
        for ligne in lignes_source[1:]:
            ligne_travail = ligne.removesuffix('\n')
            requete_sql = creation_insertion_sql(ligne_travail, text_format, table_attribut, nom_table, delimiter="\t")

            destination.write(requete_sql + "\n")


if __name__ == "__main__":
    lecture_ecriture_fichier_txt("../data/groupes.txt", "insertion_groupe.sql")
    lecture_ecriture_fichier_txt("../data/salles.txt", "insertion_salle.sql")
